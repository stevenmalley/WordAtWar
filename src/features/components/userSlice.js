import { createSlice } from '@reduxjs/toolkit';


const fakeLogin = {
  name: "???",
  playerID: 0, //3834109,
  currentGameID: null
}




export const userSlice = createSlice({
  name: 'user',
  initialState: fakeLogin,
  reducers: {
    setUser:(user,action) => action.payload,
    setCurrentGame:(user,action) => {user.currentGameID = action.payload}
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  // extraReducers: (builder) => {
  //   builder
  //     .addCase(incrementAsync.pending, (state) => {
  //       state.status = 'loading';
  //     })
  //     .addCase(incrementAsync.fulfilled, (state, action) => {
  //       state.status = 'idle';
  //       state.value += action.payload;
  //     });
  // },
});

export const selectUser = (state) => state.user;


export const setUser = (user) => {
  return (dispatch, getState) => {
    dispatch({type: 'user/setUser', payload: user});
  }
}
export const setCurrentGame = (gameID) => {
  return (dispatch, getState) => {
    dispatch({type: 'user/setCurrentGame', payload: gameID});
  }
}